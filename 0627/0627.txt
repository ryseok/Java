
<!ELEMENT title (X)>

---> <x/>

X|Y

---> <X/>
---> <Y/>

X,Y
---> <X/> <Y/>

X,Y?
---> <X/>
---> <X/><Y/>

X,Y,Z
---> <X/><Y/><Z/>

X,(Y|Z)
---> <X/><Y/>
---> <X/><Z/>

X,(Y|Z)*
---> <X/>
---> <X/><Y/>
---> <X/><Z/>
---> <X/><Y/><Y/><Y/><Y/><Y/>
---> <X/><Z/><Z/><Z/><Z/><Z/>...
---> <X/><Z/><Y/><Z/><Y/><Z/><Y/><Z/><Y/>..

X,(Y|Z)+
---> <X/><Y/>
---> <X/><Z/>
---> <X/><Y/><Y/><Y/><Y/><Y/>
---> <X/><Z/><Z/><Z/><Z/><Z/>...
---> <X/><Z/><Y/><Z/><Y/><Z/><Y/><Z/><Y/>..





http://www.w3.org/standards/techs/xml#w3c_all


[1]    document    ::=    prolog element Misc* 

[22]    prolog    ::=    XMLDecl? Misc* 
                        (doctypedecl Misc*)? 

[28]  doctypedecl ::= '<!DOCTYPE' S Name 
                    (S ExternalID)? S? 
      ('[' (markupdecl | PEReference | S)* ']' S?)? '>' 

[29]  markupdecl ::= elementdecl | 
                     AttlistDecl | 
                     EntityDecl | 
                     NotationDecl | 
                     PI | 
                     Comment 

[15]  Comment ::= '<!--' ((Char - '-') | ('-' (Char - '-')))* '-->'
                               1                  2
                           '-'뺀 문자들                      '-'문자 하나     
                   <!--                                       -->

   <!-- comment  -->          (O)
   <!-- com-ment  -->         (O)
   <!-- com-men-t  -->        (O)
   <!-- com- -ment  -->       (O)
   
   <!-- com--ment  -->        (X)



[23]  XMLDecl ::= '<?xml' VersionInfo EncodingDecl? SDDecl? S? '?>' 
                   <?xml  version =                                       ?>

[24]  VersionInfo ::= S 'version' Eq (' VersionNum ' | " VersionNum ") 

[3]  S ::= (#x20 | #x9 | #xD | #xA)+ 
            space  tab    cr    lf
            ----> WhiteSpace
            
[25]  Eq ::= S? '=' S?     

[27]  Misc ::= Comment | PI |  S 


[14]  CharData ::= [^<&]* - ([^<&]* ']]>' [^<&]*) 
   
      ^(abc)   ---> 문장의 시작   : abc로 시작  
      ^[abc]   ---> 문장의 시작   : a 또는 b 또는 c로 시작  
       [^abc]  ---> 제외하다       : a와 b와 c를 제외해라!! 
   
     <태그> CharData </태그>        (O)
     <태그> Char <Data </태그>      (X)
     <태그> Char &Data </태그>      (X)
     <태그> Char ]]>Data </태그>    (X)
     
=========================================================================
<XMLSchema>
 ---> 여러 자료형을 정의할 수 있다. (사용자 정의 자료)
 
 ---> 1. simleType   : 태그내의 자료형(숫자,문자,날짜) 정의 
      2. complexType : 태그내의 자식요소 정의
      
 ---> 확장자 .xsd 사용
 ---> XML문법을 사용.
 
예) root태그 내에 su태그가 최소 1번 ~ 최대 3번까지 출현.

   DTD
      ===> <!ELEMENT root (su,su?,su?)  >  
      
   XMLSchema
      ===> <element name='root'>
              <complexType>
                 <element name='su' minOccurs="1" maxOccurs="3"/>
              </complexType>
           </element>   
      
      
============================================================================

<XML문법(spec) 정리> ----> well-formed(잘 구성된) XML문서!!
---> XML ?  표준데이터, text데이터
                 -----> 운영체제, 프로그램, DB 종류 가리지 않고 사용.
                 
1. 최소 한개 이상의 element를 가져야 함.
   test.xml   ===>   <A/>                 
   
2. 문서 전체를 감싸는 한 개의 엘리먼트(Root Element)가 있어야 함.
   test.xml  ===>   <A/>
                    <B/>
                         ===> (X)
                         
   test.xml ===>    <ROOT>    
                       <A/>
                       <B/>
                    </ROOT>
                          ===> (O)                     
                    
3. 시작태그가 있다면 그것에 매핑되는 끝태그가 반드시 존재해야 함.
   태그종류)
      - 시작태그  <person>                    
      - 끝태그    </person>                    
      - 빈태그    <person/>                    
                    
  예)
      <root>
          <br>
      </root>
           ===> (X)
      ----------------                            
      <root>
          <br></br>
      </root>
           ===> (O)                       
      ----------------                            
      <root>
          <br/>
      </root>
           ===> (O)                       
 
4. XML은 대소문자를 구분
     <person>  </Person>   (X)  ----> 끝태그 없음 에러발생!!
      
     <person>  </person>   (O) 
 
5. 엘리먼트는 포함관계가 꼬이면 안됨.
    <a>
        <b></b>
        <c></c>
    </a> 
    ---> (O)   b,c엘리먼트(자식)는 a엘리먼트(부모)에 포함됨.
               b와 c는 형제!!
               
    <a>
       <b></b>
       <c>
    </a>               
       </c>
    ---> (X)  a,c엘리먼트 누가 부모이고 자식인지 알 수 없음 : 에러!!
    
6. xml선언은 전체 생략가능하나 선언하는 것을 권장.        
  <?xml version='1.0' encoding='UTF-8'   ?>
     ===> version은 생략 불가
     ===> version속성을 먼저, encoding속성은 나중에 기술.  
     ===> 속성값은 ''(작은따옴표) 또는 ""(큰 따옴표) 사용.
     ===> '<?xml' 앞에 공백(whitespace)을 쓰면 절대 안됨!!!
           
7. 태그의 내용(content)에 제한된 문자가 있다.   <시작태그>내용</끝태그>
   ===> '&'  '<'   ']]>'
         ===> 사용하면 에러
                  ===> 해결책) 
                           - 제한된 문자를 replace()메소드로 변환
                                    replace('<','&lt;')
                           - CDATA섹션을 사용                                    

7-2. 속성값에 제한된 문자
   ===> '&'  '<'

8. 속성값은 반드시 인용부호(작은 따옴표, 큰 따옴표)를 반드시 사용.
   HTML경우)  <table border=1  bgcolor=yellow></table>  (O)   
   
   XML경우)   <table border=1  bgcolor=yellow></table>      (X)   
             <table border='1'  bgcolor="yellow"></table>  (O)
   
9. 서로 다른 속성은 반드시 공백을 통해 구분!!
    <table border=1 cellpadding="5">    (X) 인용부호 없음
    <table border='1'cellpadding="5">   (X) 속성명앞에 공백없음
    <table border='1' cellpadding="5">  (O)
    <table border='1' 
    
           cellpadding="5">             (O)   
        
10. 주석문(설명문,comment)에 제한된 문자
    ===>  '--'
    <!-- c-o-m-m-e-n- -t -->     (O)
    <!-- comm--ent -->           (X)




