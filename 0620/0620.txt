




<mission>
- com.encore.j0615.view.JoinForm 
   ----> joinForm.html 문서로 회원가입폼을 브라우저에 출력하시오.
   

<자바스크립트>   
 ---> HTML문서(정적페이지) -----> JavaScript적용(동적페이지)
 ---> HTML문서를 통해 입력된 데이터를 얻어오고
          데이터에 대한 유효성 검사를 할 때 사용.
 ---> HTML문서에 대한 조작(태그,속성,스타일)!!★
 
<<JavaScript와 Java 비교>>

1. JavaScript: 클라이언트 스크립트 (브라우저에서 실행!!) 
   JSP(Java) : 서버 스크립트         (JVM에서 실행!!)
   
2. JavaScript의 위치
   ---> HTML문서내에 포함되어서 실행.
       (HTML문서내의 어떤 위치라도 정의 가능)
       
       
   <html>
     <head>
	   <script>
	         프로그램영역!!
	     ----> 변수선언, 함수(function)정의    
	   </script>    
     </head>
    ------------------------------------- 
     <body>
       <script>
	         프로그램영역!!
	     ----> 함수 호출    
	   </script>    
     </body>
   </html>          

3. 자료형을 선언, 정의하지 않는다!! ★
  
    자바case)
       String name="홍길동";    
              name="길라임";
              name=10;     (X)

    자바스크립트case)
       String name="홍길동"; (X)    
              name="홍길동"; (O)    

       var su;  ----> 변수선언
           su=10;          ----> number타입
           su="김주원";      ----> String타입  //대입되는 데이터에 따라 자료형이 변환됨
           su=true;        ----> boolean타입
           su= new Date(); ----> Date타입
 
4. 자바스크립트에서의 문자열 표현
  ---> 작은 따옴표와 큰 따옴표를 구분 없이 사용!!
         ----> 전혀 차이가 없음.

     name1 = "홍길동";  (O)
     name2 = '길라임';  (O)
     name3 = "김주원';  (X)

5. 자바스크립트는 구분자, 종결자 역할을 하는 ';'을 생략하는 것이 가능.
   ===> 이유: 라인(줄바꿈)을 통해 서로 다른 문장을 구분하기 때문.

   name='길동'
   age=13
   ==> (O)
   
   name="라임" age=15
   ==> (X)
   
   name="주원"; age=17
   ==> (O)
 
6. 자바스크립트  /(몫), %(나머지)
   
   10/5 ---> 2
   10%5 ---> 0
   
   10/3 ---> 3.33333333
           parseInt(3.33333333) ---> 3
           
   10%3 ---> 1
   
   
           





 
 
 
 




