<반복문> Loop
1.for문
  - 일정횟수 반복할 때 사용.
  - 규칙적인 수를 표현할 때 사용.
  - 배열의 인덱스를 표현할 때 사용.
 [형식]
 for(초기화1;  조건식2;  증감연산자3)
 {
    반복적으로 실행될 문장4
 }

 실행순서)
          1 - 2(true) - 4 - 3
	    - 2(true) - 4 - 3
	    - 2(true) - 4 - 3
	    - 2(true) - 4 - 3
	    - 2(false) : for문 탈출!!

 적용예)
 
 for(int i=1; i<=10; i++){
   
   System.out.println("안녕~!!");
 }

2.while문 
  - 조건이 참인동안 반복실행.
  - 조건이 만족되지않는다면 한번도 실행되지 않을 수 있고
    조건이 만족한다면 무한히 실행할 수도 있음.
    ===> 실행횟수: 0~무한대
    ※if문의 실행횟수: 0 또는 1


  [형식]

  while(조건식)
  {
     //반복실행할 문장
  }


3.do~while문
  - while문과 동일
    차이점: 실행횟수(1~무한대) ==> 조건식 결과와 상관없이 무조건 한번실행!!

  [형식]

  do{
     
     반복실행할 문장;
  
    }while(조건식);

=============================================

<제어문>
1.break문
  - switch블럭 또는 loop블럭(for,while,do~while)내에서 사용하며
    해당 영역을 빠져나가는 역할.

2.continue문
  - 반드시 loop영역내에서만 사용!!
  - loop영역의 끝괄호 역할!!
    for: 증감자 ---> 조건식
    while: 조건식
    do~while: 조건식

=====================================================
<객체지향의 특징>  자바는 OOP다!! (Object Oriented Programming)
1. 캡슐화
    - 클래스에 필드와 메소드를 묶어두는 것.
    - 정보은닉(private)
    - 모듈성

2. 상속 ★
    - 부모클래스가 갖는 속성(필드)과 기능(메소드)을 자식에게 물려주는 것.
    - 관련키워드: extends
      -----> class 자식 extends 상속받고자하는 부모클래스명
             {        --------
                       is a 관계!!
                      ------------
		                           자식은 부모다!!
		               ===> 자식은 부모로 형변환이 가능하다!!
	     }

     - 단일상속이 기본.(extends 뒤에 한 개의 부모클래스명만 위치)


  java.lang.Object             부모클래스, 상위클래스, super클래스          
      |
      +--  java.lang.String    자식클래스, 하위클래스, sub클래스
 
  ※Object는 자바에서 최상위클래스!!

  ===>기본 import java.lang.*;
  class My ===> 기본 extends Object 
  {
  
  }


3. 다형성 ★★
  - 메소드 오버로딩(Method Overloading)
    : 한 클래스내에 같은 이름을 갖는 메소드를 여러개 구현(정의)하는 것.
          단, 인자의 갯수나 자료형이 반드시 달라야 함!!
    
    class A{
       int su=10;
       int su=20; ===> 중복된 su이름을 사용했기 때문에 에러발생!!
       
       void hello(){
         System.out.println("안녕");
       }
       void hello(){} ===> 중복된 hello이름을 사용했기 때문에 에러발생!!
       void hello(String name){  ===> 가능!!
         System.out.println("안녕,"+name);
       }
       void hello(int age){  ===> 가능!!
         System.out.println("안녕,"+age);
       }    
    }
    
  
  - 메소드 오버라이딩(Method Overriding) ★
    : 부모클래스에 있는 메소드를 자식클래스에서 재정의!!
    - 자식클래스에서 메소드 내용을 전체 바꾸거나
           부모클래스 메소드에 기능을 추가할 수 있다.  


=======================================================================
통합개발환경(IDE)

http://www.eclipse.org

---> eclipse-jee-oxygen-3a-win32-x86_64.zip 다운로드
---> 압축풀기
---> eclipse/eclipse.exe 실행!!

-------------------------------------------------------------------------
<이클립스 단축키>
1. 화면 확대,축소 : ctrl+shift+ 더하기버튼
                 ctrl+shift+ 빼기버튼

2. ctrl + 1 : 제안기능

3. ctrl + space : 단어 자동완성 기능

4. ctrl + alt + 위 화살표                
   ctrl + alt + 아래 화살표   : 특정블럭(한줄이상의 문장) 복사
















