

<로그인과 회원가입>

1. View (com.encore.j0615.view)
    - LoginForm(로그인폼)
       : 비밀번호 ----> JPasswordField 사용
      tf_id
      tf_pass
      bt_login
      bt_join 
       
    - JoinForm(회원가입폼)
       : 취소버튼(입력초기화)추가
       : X버튼(로그인폼이동)
      tf_id
      tf_pass
      tf_pass2
      tf_name
      tf_ssn1
      tf_ssn2
      tf_phone1
      tf_phone2
      tf_phone3
      tf_addr
      cb_job
      bt_submit  등록버튼
      bt_reset   취소버튼
      bt_checkid 중복확인버튼 
       
    - UpdateForm(회원정보수정폼)
       : 타이틀---> 회원정보수정
       : id,이름,주민번호의 편집불능
       : 취소버튼(수정초기화)추가
       : X버튼(로그인폼이동)
       : 중복확인버튼 제거 
       
    - ServiceForm(서비스창) 
       : id,이름,나이,성별,전화번호,주소,직업 출력
       : 보기버튼 ----> 전체보기
       : 버튼(전체보기, 수정, 삭제, 이름검색)
       : JTable table, DefaultTableModel dtm
       : bt_sel_all, bt_up, bt_del,  
         bt_sel_id(입력된 문자를 포함하는 아이디검색),
         bt_exit

----------------------------------------------------------------
         
2. Model (com.encore.j0615.model.vo, com.encore.j0615.model.dao)
    - Member ===> DB테이블의 행 한개를 객체로 표현
    - MemberDAO
       (insert,delete,update,select,selectAll)
    
----------------------------------------------------------------
    
3. Controller (com.encore.j0615.control)
    - Controller
    
================================================================
<작업순서>
1. 시작뷰는 로그인폼!!
   - Controller에 뷰(LoginForm,JoinForm,UpdateForm,ServiceForm)등록
   - LoginForm만 setVisible(true) 유지
   
2. 회원가입
   - LoginForm의 '신규가입'버튼 클릭으로 JoinForm이동
   - JoinForm 입력값 얻기
   - 입력값을 Member로 묶어주기
   - MemberDAO : insert() 호출
                   ----> DB입력
   - 입력성공 또는 실패 메시지후 성공시 LoginForm으로 이동.                   

3. 로그인
   - LoginForm 입력값(아이디,비밀번호) 얻기
   - MemberDAO : selectLogin()호출
                   ----> DB조회
   - 아이디와 비밀번호 일치시 '로그인성공!!' 후 ServiceForm 이동
                              불일치시 '로그인실패!!'

4. 서비스폼(JTable): 회원정보 출력
   - LoginForm에서 ServiceForm 이동시 전체 회원정보 JTable에 출력
   - ServiceForm에서 '전체보기'버튼 클릭시 전체 회원정보 JTable에 출력
   ====> MemberDAO : selectAll()의 결과값을 통해!!
                   ----> DB조회

5. 서비스폼(JTable): 회원정보 수정
 5-1)
   - 입력대화상자 통해 수정하고자 하는 아이디 입력
   - MemberDAO : select() 호출
                   ---> DB조회
   - DB조회된 결과를 UpdateForm에 출력  
           예) upform.tf.setText(rs.getString("컬럼명"));                   
   - ServiceForm에서 UpdateForm으로 이동.
 5-2)
   - UpdateForm에 입력된 데이터 얻기   
   - 입력값을 Member로 묶어주기
   - MemberDAO : update() 호출
                   ----> DB수정
                      
   - 수정성공 또는 실패 메시지 출력
         수정성공시 ServiceForm에 수정된 결과 반영 후 ServiceForm으로 이동.    

6. 서비스폼(JTable): 회원삭제(탈퇴)
   - 입력대화상자 통해 삭제하고자 하는 아이디 입력
   - MemberInfoDAO : delete() 호출
                   ---> DB삭제                                       
   - 삭제 유무에 따라 '삭제성공!!' 또는 '삭제실패!!' 메시지 출력
   - 삭제성공시 ServiceForm에 삭제된 결과 반영.

7. 서비스폼(JTable): 이름검색
   - 입력대화상자 통해 검색하고자 하는 (부분)이름 입력
   - MemberInfoDAO : selectNames(String name) 호출
                   ---> DB조회
                   ---> 전달받은 name으로 시작하는 모든 Member정보 얻기
                   --->예) 입력값: 홍  
                           ---> 이름: 홍길동, 홍라임, 홍주원,....
                           
   - 전체가 아닌  '홍길동', '홍라임', '홍주원' 이름의 정보만 JTable에 출력.                                             
  
    
    