


Statement (java.sql.Statement)
   Statement에서는 executeQuery("DQL문"),excecuteUpdate("DML문")메소드를 
   실행하는 시점에 파라미터로 SQL문을 DB에 전달한다.
   
   stmt = conn.createStatement();
   
   String sql="insert into person values (1,'홍길동',13)";
     stmt.executeUpdate(sql);
   
   장점 : 사용된 SQL문 전체를 명확히 알 수 가 있어서 디버깅이 쉽다.
   단점 : 조건값이 틀린 많은 수의 SQL문을 반복 실행하게 되는 경우, DB서버에서 모두 새롭게 
     PARSING되어야 하므로 부하가 생길수 있다.
     SQL Injection에 취약.

PreparedStatement(java.sql.PreparedStatement)
  PreparedStatement는 커넥션에서 생성하면서 SQL문이 DB에 전송되어진다.
  Statement클래스를 상속하고 있음
  
  String sql="insert into person values (?,?,?)";
  stmt = conn.prepareStatement(sql);
     stmt.setString   (1,"길라임");
     stmt.setInt      (2,15);
     stmt.setString   (3,"학생");
  stmt.executeUpdate();
  

  장점: 
     bind변수를 사용하여 DB서버에서 파싱된 SQL을 재사용하게 만듬으로, 
     반복적인 다량의 SQL수행시 성능상 이득이 있다.
     반복 루프를 통해서 하나의 SQL문에 변수값만 입력하며 반복 실행 할 수 있음.
     SQL injection예방의 방법이 될 수 있다.
     
  단점:
     오류발생 시, 변수에 입력되는 값을 알 수 없어서 디버깅이 어렵다.
     
     
     
 
 
 
 
     